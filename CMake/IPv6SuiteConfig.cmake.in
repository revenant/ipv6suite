# -*- CMAKE -*-
# IPv6Suite/Etc/CMake/IPv6SuiteConfig.cmake.in
#   also configured by CMake to
# @IPv6Suite_BINARY_DIR@/IPv6SuiteConfig.cmake
#
# This CMake module is configured by IPv6Suite's build process to export the
# project settings for use by client projects.  A client project may
# find IPv6Suite and include this module using the FIND_PACKAGE command:
#
#  FIND_PACKAGE(IPv6Suite)
#
# After this command executes, projects may test IPv6Suite_FOUND for whether
# IPv6Suite has been found.  If so, the settings listed below in this file
# have been loaded and are available for use.
#
# Typically, a client project will include UseIPv6Suite.cmake from the
# directory specified by the IPv6Suite_CMAKE_DIR setting:
#
#  FIND_PACKAGE(IPv6Suite)
#  IF(IPv6Suite_FOUND)
#    INCLUDE(${IPv6Suite_CMAKE_DIR}/UseIPv6Suite.cmake)
#  ELSE(IPv6Suite_FOUND)
#    MESSAGE("IPv6Suite_DIR should be set to the IPv6Suite build directory.")
#  ENDIF(IPv6Suite_FOUND)
#
# See IPv6Suite/Etc/CMake/UseIPv6Suite.cmake for details.
#

# The build settings file.
SET(IPv6Suite_BUILD_SETTINGS_FILE "@IPv6Suite_BUILD_SETTINGS_FILE@")

# The IPv6Suite library dependencies.
IF(NOT IPv6Suite_NO_LIBRARY_DEPENDS)
  INCLUDE("@IPv6Suite_LIBRARY_DEPENDS_FILE@")
ENDIF(NOT IPv6Suite_NO_LIBRARY_DEPENDS)


# The IPv6Suite library directory.
SET(IPv6Suite_LIBRARY_DIR "@LIBRARY_OUTPUT_PATH@")
SET(IPv6Suite_INCLUDE_DIR "@IPv6Suite_BINARY_DIR@/include")
# The IPv6Suite CMake support directory.
# Clients projects should not use the Find*.cmake files in this directory.
SET(IPv6Suite_CMAKE_DIR "@CMAKEFILES_PATH@")

# IPv6Suite Configuration options.
SET(BUILD_SHARED_LIBS "@BUILD_SHARED_LIBS@")
SET(BUILD_DEBUG "@BUILD_DEBUG@")
SET(BUILD_MOBILITY "@BUILD_MOBILITY@")
SET(BUILD_HMIP "@BUILD_HMIP@")
SET(OPP_USE_TK "@OPP_USE_TK@")
SET(OPP_USE_MPI "@OPP_USE_MPI@")
SET(OPP_USE_AKAROA "@OPP_USE_AKAROA@")
SET(USE_XMLWRAPP "@USE_XMLWRAPP@")
SET(USER_RELEASE "@USER_RELEASE@")

#external build options (dependent of other libraries)
SET(BUILD_UNITTESTS "@BUILD_UNITTESTS@")
SET(LIBCWD_DEBUG "@LIBCWD_DEBUG@")
SET(EARLY_LIBCWD "@@EARLY_LIBCWD")

SET(EWU_FASTRS "@EWU_FASTRS@")
SET(EWU_L2TRIGGER "@EWU_L2TRIGGER@")
SET(EWU_MACBRIDGE "@EWU_MACBRIDGE@")
SET(JLAI_EH "@JLAI_EH@")
SET(JLAI_FASTRA "@JLAI_FASTRA@")
SET(JLAI_ODAD "@JLAI_ODAD@")
SET(SWOON_L2FUZZYHO "@SWOON_L2FUZZYHO@")
#SET(IPv6Suite_BUILD_TESTS "@BUILD_TESTS@")
#SET(IPv6Suite_BUILD_EXAMPLES "@BUILD_EXAMPLES@")

# IPv6Suite has many parts that are optional, depending on selections made
# when building.  The stanzas below give a consistent (though
# pedantic) interface to each part.  Clients use these settings to
# determine whether a part was built (_FOUND), where its headers are
# located (_INCLUDE_DIR) and in some cases what libraries must be
# linked to use the part (_LIBRARIES).  Most client projects will
# likely still refer to vcl by hard-wired "vcl" instead of using the
# variable IPv6Suite_VCL_LIBRARIES, but it is there just in case.

SET(BOOSTROOT "@BOOSTROOT@")
SET(BOOST_LIB_REGEX "@BOOST_LIB_REGEX@")

SET(OPP_INCLUDE_PATH "@OPP_INCLUDE_PATH@")
SET(OPP_LIBRARIES "@OPP_LIBRARIES@")
SET(OPP_TKGUILIBRARIES "@OPP_TKGUILIBRARIES@")
SET(OPP_MSGC "@OPP_MSGC@")
SET(OPP_NEDC "@OPP_NEDC@")
SET(OPP_WRAP_NEDC "@OPP_WRAP_NEDC@")
SET(OPP_WRAP_MSGC "@OPP_WRAP_MSGC@")


SET(LIBCWD_FOUND "@LIBCWD_FOUND@")
SET(LIBCWD_INCLUDE_DIR "@LIBCWD_INCLUDE_DIR@")
SET(LIBCWD_LIBRARY "@LIBCWD_LIBRARY@")

SET(CPPUNIT_FOUND "@CPPUNIT_FOUND@")
SET(CPPUNIT_CXX_FLAGS "@CPPUNIT_CXX_FLAGS@") #--cflags is only arg to cppunit-config
SET(CPPUNIT_INCLUDE_DIR "@CPPUNIT_CXX_FLAGS@")
SET(CPPUNIT_LIBRARY "@CPPUNIT_LIBRARY@")

SET(XMLWRAPP_FOUND "@XMLWRAPP_FOUND@")
SET(XMLWRAPP_CXX_FLAGS "@XMLWRAPP_CXX_FLAGS@") #--cxxflags only
SET(XMLWRAPP_LIBRARY "@XMLWRAPP_LIBRARY@")

SET(AKAROA_INCLUDE_PATH "@AKAROA_INCLUDE_PATH@")
SET(AKAROA_LIBRARY "@AKAROA_LIBRARY@")


#Needed settings as some IPv6Suite cmake files are used too
#Clients should simply use IPv6Suite_DIR always
SET(IPv6Suite_BINARY_DIR "@IPv6Suite_BINARY_DIR@") #May be needed for Macros.cmake which is shared
SET(CMAKEFILES_PATH "@CMAKEFILES_PATH@")

# Tell UseIPv6Suite.cmake that IPv6SuiteConfig.cmake has been included.
SET(IPv6Suite_CONFIG_CMAKE 1)

