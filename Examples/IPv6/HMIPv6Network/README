20040706

HMIPv6Network -r 1
I have found a bug which shows symptoms when the MN goes back home and goes to
another foreign subnet. The bug is that when sending a BU to HA it does not go
back to the HA because the next hop neighbour is the HA's global address itself.
The updateDestEntriesbyNeighbour does not work as the HA is a DE with a
neighbour entry of it's own global address instead of link local address. This
is correct since when MN was at home the global address is indeed an on-link
neighbour. It was inserted into NC because when MN arrived at home it needs to
send BU to HA to stop it from been its HA and stop interception of packets.

1. I thought that inserting a NC was wrong because it is a router and hence we
   get a Warning in log file about neighbour entry was in fact a router.

2. I thought an existing router entry existed already. But I tried getting it
   but does not exist so perhaps I delete the router entry but retain the mipv6
   RE.

3. I should remove all global DEs pointing to HAs so the conceptual sending can
   kick in and use the current router as next hop when relinquishRouter is
   executed.

Will fix later since it only shows up after visiting prior visited subnet.


Bug 2

Move data members from MStateMobileNode to CDSMN and test with multiple MNs

HMIPv6Simple -f HMIPv6Simple.ini -r 1
--------------------------------------------------------
        hmipv6SimpleNet.client1.ping6App
--------------------------------------------------------
Ping: deadline 700s NOT reached at 250s
hmipv6SimpleNet.client1.ping6App %drop rate 5.310%
round-trip min/avg/max = 400.554ms/629.037ms/1002.303ms
stddev=54.586ms variance=2.980ms
--------------------------------------------------------

Without hmip at mn and no map options and RO omnetpp-mip.vec RO gives fastest
RTT since no travelling over long Internet delay. handover delay also seems to
be smaller although first one is longer. Need more runs to establish trend on
handover latency

hmip enabled, With(omnetpp-hmip-noro-map.vec) or without map(omnetpp-hmip-noro.vec) options from map has similar results for ping RTT. This is to be expected
since no ro means it has to travel back to HA regardless of MAP's involvement
and since binding with MAP is not a lengthy process the  handover times are not
that much different.

TODO
HMIP should cache a best map or maps with each mip6 router so we can do
transition smoothly without waiting for router adv. again and also takes care of
map option from home subnet case since we'll wait for rtradvmissed before using
new map options from the latest mip6 router.

Need to set up reverse tunnels only at processBA not sendBU. Although the
current impl now has code which detects using pcoa and removed reverse tunnels
and so will not allow packets to egress. Search for "Tunnel not found" in debug
log. May leave this in there as such since external behaviour is consistent anway.

Turning on mapreverseTunnel to get double tunnelling.

My implementation assumes that the HA will allow us to reverse tunnel before we
even get the BA back. This could be somewhat overeager as what happens is we
reverse tunnel the lcoa -> HA . When we know we have found a map
after we realise we've moved we also create another reverse tunnel, However it
is from lcoa->MAP and lcoa -> HA and not rcoa-> HA because we have not received
BA from MAP. Now in the original HA case we do not need BA to tell us that we
can use lcoa because that is something we did DAD on. However rcoa is a
different matter and we should leave this with MAP. So should I fix it so that
we wait for BA before turning on the reverse tunnels? I mean can we assume that
in most cases the HAs will say yes? Or should I fix the MAP so
that it does not decapsulate and send off an lcoa sourced datagram for us?

-f HMIPSait.ini

without ro
--------------------------------------------------------
        hmipv6SaitNet.client1.ping6App
--------------------------------------------------------
Ping: deadline 700s NOT reached at 400s
hmipv6SaitNet.client1.ping6App %drop rate 3.347%
round-trip min/avg/max = 40.434ms/98.941ms/102.683ms
stddev=11.832ms variance=0.140ms
--------------------------------------------------------

with ro
--------------------------------------------------------
        hmipv6SaitNet.client1.ping6App
--------------------------------------------------------
Ping: deadline 700s NOT reached at 550s
hmipv6SaitNet.client1.ping6App %drop rate 2.402%
round-trip min/avg/max = 40.434ms/60.730ms/101.986ms
stddev=3.097ms variance=0.010ms
--------------------------------------------------------
