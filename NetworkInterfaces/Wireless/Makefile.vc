#
#  Makefile for Wireless
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\\inetconfig.vc -n -r -I../PPP6 -I.. -I..\.. -I..\..\Util -I..\Ethernet6 -I..\..\Network\IPv6 -I..\..\World -I..\..\PHY\Mobility -I..\..\PHY\Wireless
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = Wireless

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../PPP6 -I.. -I../.. -I../../Util -I../Ethernet6 -I../../Network/IPv6 -I../../World -I../../PHY/Mobility -I../../PHY/Wireless

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=../PPP6/.tstamp \
            ../.tstamp \
            ../../.tstamp \
            ../../Util/.tstamp \
            ../Ethernet6/.tstamp \
            ../../Network/IPv6/.tstamp \
            ../../World/.tstamp \
            ../../PHY/Mobility/.tstamp \
            ../../PHY/Wireless/.tstamp

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "../../inetconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= WirelessEtherFrame_m.obj WirelessEtherFrameBody_m.obj WirelessExternalSignal_m.obj hodec.obj WirelessAccessPoint.obj WirelessEtherAPReceiveMode.obj WirelessEtherAScanReceiveMode.obj WirelessEtherAssociationReceiveMode.obj WirelessEtherAuthenticationReceiveMode.obj WirelessEtherBridge.obj WirelessEtherDataReceiveMode.obj WirelessEtherModule.obj WirelessEtherMonitorReceiveMode.obj wirelessethernet.obj WirelessEtherPScanReceiveMode.obj WirelessEtherReceiveMode.obj WirelessEtherSignal.obj WirelessEtherState.obj WirelessEtherStateAwaitACK.obj WirelessEtherStateAwaitACKReceive.obj WirelessEtherStateBackoff.obj WirelessEtherStateBackoffReceive.obj WirelessEtherStateIdle.obj WirelessEtherStateReceive.obj WirelessEtherStateSend.obj xfuzzy.obj

# header files generated (from msg files)
GENERATEDHEADERS= WirelessEtherFrame_m.h WirelessEtherFrameBody_m.h WirelessExternalSignal_m.h

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) Makefile.vc subdirs .tstamp

.tstamp: $(OBJS)
	@echo.>.tstamp

$(OBJS) : $(GENERATEDHEADERS)

# purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

$(EXT_DIR_TSTAMPS):
	@echo Error: $(@:/=\) does not exist.
	@echo This means that at least the above dependency directory has not been built.
	@echo Maybe you need to do a top-level make?
	@echo.
	@exit /b 1

subdirs: $(SUBDIR_TARGETS)

WirelessEtherFrame_m.obj: WirelessEtherFrame_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp WirelessEtherFrame_m.cc

WirelessEtherFrame_m.cc WirelessEtherFrame_m.h: WirelessEtherFrame.msg
	$(MSGC:/=\) -s _m.cc $(INCLUDE_PATH) WirelessEtherFrame.msg

WirelessEtherFrameBody_m.obj: WirelessEtherFrameBody_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp WirelessEtherFrameBody_m.cc

WirelessEtherFrameBody_m.cc WirelessEtherFrameBody_m.h: WirelessEtherFrameBody.msg
	$(MSGC:/=\) -s _m.cc $(INCLUDE_PATH) WirelessEtherFrameBody.msg

WirelessExternalSignal_m.obj: WirelessExternalSignal_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp WirelessExternalSignal_m.cc

WirelessExternalSignal_m.cc WirelessExternalSignal_m.h: WirelessExternalSignal.msg
	$(MSGC:/=\) -s _m.cc $(INCLUDE_PATH) WirelessExternalSignal.msg

hodec.obj: hodec.cc
	$(CXX) -c $(COPTS) /Tp hodec.cc

WirelessAccessPoint.obj: WirelessAccessPoint.cc
	$(CXX) -c $(COPTS) /Tp WirelessAccessPoint.cc

WirelessEtherAPReceiveMode.obj: WirelessEtherAPReceiveMode.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherAPReceiveMode.cc

WirelessEtherAScanReceiveMode.obj: WirelessEtherAScanReceiveMode.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherAScanReceiveMode.cc

WirelessEtherAssociationReceiveMode.obj: WirelessEtherAssociationReceiveMode.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherAssociationReceiveMode.cc

WirelessEtherAuthenticationReceiveMode.obj: WirelessEtherAuthenticationReceiveMode.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherAuthenticationReceiveMode.cc

WirelessEtherBridge.obj: WirelessEtherBridge.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherBridge.cc

WirelessEtherDataReceiveMode.obj: WirelessEtherDataReceiveMode.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherDataReceiveMode.cc

WirelessEtherModule.obj: WirelessEtherModule.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherModule.cc

WirelessEtherMonitorReceiveMode.obj: WirelessEtherMonitorReceiveMode.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherMonitorReceiveMode.cc

wirelessethernet.obj: wirelessethernet.cc
	$(CXX) -c $(COPTS) /Tp wirelessethernet.cc

WirelessEtherPScanReceiveMode.obj: WirelessEtherPScanReceiveMode.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherPScanReceiveMode.cc

WirelessEtherReceiveMode.obj: WirelessEtherReceiveMode.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherReceiveMode.cc

WirelessEtherSignal.obj: WirelessEtherSignal.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherSignal.cc

WirelessEtherState.obj: WirelessEtherState.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherState.cc

WirelessEtherStateAwaitACK.obj: WirelessEtherStateAwaitACK.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherStateAwaitACK.cc

WirelessEtherStateAwaitACKReceive.obj: WirelessEtherStateAwaitACKReceive.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherStateAwaitACKReceive.cc

WirelessEtherStateBackoff.obj: WirelessEtherStateBackoff.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherStateBackoff.cc

WirelessEtherStateBackoffReceive.obj: WirelessEtherStateBackoffReceive.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherStateBackoffReceive.cc

WirelessEtherStateIdle.obj: WirelessEtherStateIdle.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherStateIdle.cc

WirelessEtherStateReceive.obj: WirelessEtherStateReceive.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherStateReceive.cc

WirelessEtherStateSend.obj: WirelessEtherStateSend.cc
	$(CXX) -c $(COPTS) /Tp WirelessEtherStateSend.cc

xfuzzy.obj: xfuzzy.cc
	$(CXX) -c $(COPTS) /Tp xfuzzy.cc


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	@if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc generateheaders && cd .. || exit /b 1

clean:
	-del *.obj *.idb *.pdb .tstamp 2>NUL
	-del *_n.cc *_n.h *_m.cc *_m.h 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd .. || exit /b 1

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc depend && cd .. || exit /b 1

makefiles:
	opp_nmakemake -f  -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\\inetconfig.vc -n -r -I../PPP6 -I.. -I..\.. -I..\..\Util -I..\Ethernet6 -I..\..\Network\IPv6 -I..\..\World -I..\..\PHY\Mobility -I..\..\PHY\Wireless 
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc makefiles && cd .. || exit /b 1

# "re-makemake" is a deprecated, historic name of the above target
re-makemake: makefiles

# DO NOT DELETE THIS LINE -- make depend depends on it.

