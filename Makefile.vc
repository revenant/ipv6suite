#
#  Makefile for IPv6SuiteWithINET
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\/inetconfig.vc -n -r -X Documentation -X Etc -X Unsupported
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = IPv6SuiteWithINET

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "inetconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= 

# header files generated (from msg files)
GENERATEDHEADERS= 

# subdirectories to recurse into
SUBDIRS= Applications Base Examples Mobility Network NetworkInterfaces Nodes PHY Tests Transport Util World
SUBDIR_TARGETS=  Applications_dir Base_dir Examples_dir Mobility_dir Network_dir NetworkInterfaces_dir Nodes_dir PHY_dir Tests_dir Transport_dir Util_dir World_dir

# inserted from file 'makefrag.vc':
# this file automatically gets inserted into Makefiles generated by opp_makemake

# preserve default target
all: $(TARGET)

# all _m.h files must exist before we build anything, so run opp_msgc first
subdirs $(OBJS) : generateheaders

# XXX this is just temporary:
#Transport_dir Applications_dir Network_dir : NetworkInterfaces_dir
Applications_dir NetworkInterfaces_dir : Network_dir

# add dependencies across directories
Network_dir Transport_dir NetworkInterfaces_dir PHY_dir Applications_dir : Util_dir Base_dir
Nodes_dir : Network_dir Transport_dir NetworkInterfaces_dir PHY_dir Mobility_dir Applications_dir World_dir
Examples_dir Tests_dir : Nodes_dir
Examples_dir : Tests_dir  # this is just for convenience, can be removed

# documentation targets
DOC_DIR=Documentation

docs: doxy neddoc

doxy:
        doxygen doxy.cfg

neddoc:
        opp_neddoc -o $(DOC_DIR)/neddoc -t $(DOC_DIR)/doxy/doxytags.xml -d ../doxy *.ned *.msg $(SUBDIRS)

neddoc-without-doxy:
        opp_neddoc -o $(DOC_DIR)/neddoc *.ned *.msg $(SUBDIRS)


$(TARGET): $(OBJS) Makefile.vc subdirs .tstamp

.tstamp: $(OBJS)
	@echo.>.tstamp

# purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs: $(SUBDIR_TARGETS)

Applications_dir:
	cd Applications && cd && nmake /nologo /f Makefile.vc

Base_dir:
	cd Base && cd && nmake /nologo /f Makefile.vc

Examples_dir:
	cd Examples && cd && nmake /nologo /f Makefile.vc

Mobility_dir:
	cd Mobility && cd && nmake /nologo /f Makefile.vc

Network_dir:
	cd Network && cd && nmake /nologo /f Makefile.vc

NetworkInterfaces_dir:
	cd NetworkInterfaces && cd && nmake /nologo /f Makefile.vc

Nodes_dir:
	cd Nodes && cd && nmake /nologo /f Makefile.vc

PHY_dir:
	cd PHY && cd && nmake /nologo /f Makefile.vc

Tests_dir:
	cd Tests && cd && nmake /nologo /f Makefile.vc

Transport_dir:
	cd Transport && cd && nmake /nologo /f Makefile.vc

Util_dir:
	cd Util && cd && nmake /nologo /f Makefile.vc

World_dir:
	cd World && cd && nmake /nologo /f Makefile.vc


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	@if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do @cd %%i && nmake /nologo /f Makefile.vc generateheaders && cd .. || exit /b 1

clean:
	-del *.obj *.idb *.pdb .tstamp 2>NUL
	-del *_n.cc *_n.h *_m.cc *_m.h 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd .. || exit /b 1

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc depend && cd .. || exit /b 1

makefiles:
	opp_nmakemake -f  -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\/inetconfig.vc -n -r -X Documentation -X Etc -X Unsupported 
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc makefiles && cd .. || exit /b 1

# "re-makemake" is a deprecated, historic name of the above target
re-makemake: makefiles

# DO NOT DELETE THIS LINE -- make depend depends on it.

