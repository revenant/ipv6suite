#
#  Makefile for IPv4
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\\inetconfig.vc -n -r -I../../Base -I../../Util -I../Generic
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = IPv4

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../../Base -I../../Util -I../Generic

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=../../Base/.tstamp \
            ../../Util/.tstamp \
            ../Generic/.tstamp

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "../../inetconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= ICMPMessage_m.obj IPDatagram_m.obj ICMP.obj IP.obj IPFragBuf.obj IPv4InterfaceData.obj ProtocolMap.obj RoutingTable.obj RoutingTableParser.obj

# header files generated (from msg files)
GENERATEDHEADERS= ICMPMessage_m.h IPDatagram_m.h

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) Makefile.vc subdirs .tstamp

.tstamp: $(OBJS)
	@echo.>.tstamp

$(OBJS) : $(GENERATEDHEADERS)

# purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

$(EXT_DIR_TSTAMPS):
	@echo Error: $(@:/=\) does not exist.
	@echo This means that at least the above dependency directory has not been built.
	@echo Maybe you need to do a top-level make?
	@echo.
	@exit /b 1

subdirs: $(SUBDIR_TARGETS)

ICMPMessage_m.obj: ICMPMessage_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp ICMPMessage_m.cc

ICMPMessage_m.cc ICMPMessage_m.h: ICMPMessage.msg
	$(MSGC:/=\) -s _m.cc $(INCLUDE_PATH) ICMPMessage.msg

IPDatagram_m.obj: IPDatagram_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp IPDatagram_m.cc

IPDatagram_m.cc IPDatagram_m.h: IPDatagram.msg
	$(MSGC:/=\) -s _m.cc $(INCLUDE_PATH) IPDatagram.msg

ICMP.obj: ICMP.cc
	$(CXX) -c $(COPTS) /Tp ICMP.cc

IP.obj: IP.cc
	$(CXX) -c $(COPTS) /Tp IP.cc

IPFragBuf.obj: IPFragBuf.cc
	$(CXX) -c $(COPTS) /Tp IPFragBuf.cc

IPv4InterfaceData.obj: IPv4InterfaceData.cc
	$(CXX) -c $(COPTS) /Tp IPv4InterfaceData.cc

ProtocolMap.obj: ProtocolMap.cc
	$(CXX) -c $(COPTS) /Tp ProtocolMap.cc

RoutingTable.obj: RoutingTable.cc
	$(CXX) -c $(COPTS) /Tp RoutingTable.cc

RoutingTableParser.obj: RoutingTableParser.cc
	$(CXX) -c $(COPTS) /Tp RoutingTableParser.cc


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	@if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do @cd %%i && nmake /nologo /f Makefile.vc generateheaders && cd .. || exit /b 1

clean:
	-del *.obj *.idb *.pdb .tstamp 2>NUL
	-del *_n.cc *_n.h *_m.cc *_m.h 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd .. || exit /b 1

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc depend && cd .. || exit /b 1

makefiles:
	opp_nmakemake -f  -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\\inetconfig.vc -n -r -I../../Base -I../../Util -I../Generic 
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc makefiles && cd .. || exit /b 1

# "re-makemake" is a deprecated, historic name of the above target
re-makemake: makefiles

# DO NOT DELETE THIS LINE -- make depend depends on it.
ICMP.obj: ICMP.cc \
  ICMP.h \
  RoutingTableAccess.h \
  ICMPMessage.h \
  IPDatagram.h \
  ../../Base/ModuleAccess.h \
  RoutingTable.h \
  ../../Base/INETDefs.h \
  ../Generic/IPAddress.h \
  ../Generic/InterfaceTable.h \
  ../Generic/InterfaceEntry.h
IP.obj: IP.cc \
  IP.h \
  IPDatagram.h \
  IPv4InterfaceData.h \
  ../../Base/QueueBase.h \
  ../Generic/InterfaceTableAccess.h \
  RoutingTableAccess.h \
  RoutingTable.h \
  ICMPAccess.h \
  IPFragBuf.h \
  ProtocolMap.h \
  ../../Base/AbstractQueue.h \
  ../../Base/ModuleAccess.h \
  ../Generic/InterfaceTable.h \
  ../../Base/INETDefs.h \
  ../Generic/InterfaceEntry.h \
  ../Generic/IPAddress.h \
  ICMP.h \
  ICMPMessage.h
IPFragBuf.obj: IPFragBuf.cc \
  IPFragBuf.h \
  ICMP.h \
  ../../Base/INETDefs.h \
  IPDatagram.h \
  RoutingTableAccess.h \
  ICMPMessage.h \
  ../../Base/ModuleAccess.h \
  RoutingTable.h \
  ../Generic/IPAddress.h \
  ../Generic/InterfaceTable.h \
  ../Generic/InterfaceEntry.h
IPv4InterfaceData.obj: IPv4InterfaceData.cc \
  IPv4InterfaceData.h \
  ../../Base/INETDefs.h \
  ../Generic/IPAddress.h
ProtocolMap.obj: ProtocolMap.cc \
  ProtocolMap.h
RoutingTable.obj: RoutingTable.cc \
  ../../Util/stlwatch.h \
  RoutingTable.h \
  RoutingTableParser.h \
  IPv4InterfaceData.h \
  ../Generic/InterfaceTable.h \
  ../Generic/InterfaceTableAccess.h \
  ../../Base/INETDefs.h \
  ../Generic/IPAddress.h \
  ../Generic/InterfaceEntry.h \
  ../../Base/ModuleAccess.h
RoutingTableParser.obj: RoutingTableParser.cc \
  RoutingTableParser.h \
  ../../Util/StringTokenizer.h \
  IPv4InterfaceData.h \
  RoutingTable.h \
  ../../Base/INETDefs.h \
  ../Generic/IPAddress.h \
  ../Generic/InterfaceTable.h \
  ../Generic/InterfaceEntry.h
