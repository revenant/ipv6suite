#
#  Makefile for Ethernet6
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\\inetconfig.vc -n -r -I..\Wireless -I..\..\PHY\Wireless -I.. -I..\.. -I..\..\Util -I..\..\Network\IPv6 -I..\..\World
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = Ethernet6

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../Wireless -I../../PHY/Wireless -I.. -I../.. -I../../Util -I../../Network/IPv6 -I../../World

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=../Wireless/.tstamp \
            ../../PHY/Wireless/.tstamp \
            ../.tstamp \
            ../../.tstamp \
            ../../Util/.tstamp \
            ../../Network/IPv6/.tstamp \
            ../../World/.tstamp

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "../../inetconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= EtherBridge.obj EtherFrame.obj EtherModule.obj EtherModuleAP.obj EtherModuleBridge.obj ethernet.obj EtherSignal.obj EtherState.obj EtherStateIdle.obj EtherStateReceive.obj EtherStateReceiveWaitBackoff.obj EtherStateSend.obj EtherStateWait.obj EtherStateWaitBackoff.obj EtherStateWaitBackoffJam.obj EtherStateWaitJam.obj MACAddress.obj

# header files generated (from msg files)
GENERATEDHEADERS= 

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) Makefile.vc subdirs .tstamp

.tstamp: $(OBJS)
	@echo.>.tstamp

$(OBJS) : $(GENERATEDHEADERS)

# purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

$(EXT_DIR_TSTAMPS):
	@echo Error: $(@:/=\) does not exist.
	@echo This means that at least the above dependency directory has not been built.
	@echo Maybe you need to do a top-level make?
	@echo.
	@exit /b 1

subdirs: $(SUBDIR_TARGETS)

EtherBridge.obj: EtherBridge.cc
	$(CXX) -c $(COPTS) /Tp EtherBridge.cc

EtherFrame.obj: EtherFrame.cc
	$(CXX) -c $(COPTS) /Tp EtherFrame.cc

EtherModule.obj: EtherModule.cc
	$(CXX) -c $(COPTS) /Tp EtherModule.cc

EtherModuleAP.obj: EtherModuleAP.cc
	$(CXX) -c $(COPTS) /Tp EtherModuleAP.cc

EtherModuleBridge.obj: EtherModuleBridge.cc
	$(CXX) -c $(COPTS) /Tp EtherModuleBridge.cc

ethernet.obj: ethernet.cc
	$(CXX) -c $(COPTS) /Tp ethernet.cc

EtherSignal.obj: EtherSignal.cc
	$(CXX) -c $(COPTS) /Tp EtherSignal.cc

EtherState.obj: EtherState.cc
	$(CXX) -c $(COPTS) /Tp EtherState.cc

EtherStateIdle.obj: EtherStateIdle.cc
	$(CXX) -c $(COPTS) /Tp EtherStateIdle.cc

EtherStateReceive.obj: EtherStateReceive.cc
	$(CXX) -c $(COPTS) /Tp EtherStateReceive.cc

EtherStateReceiveWaitBackoff.obj: EtherStateReceiveWaitBackoff.cc
	$(CXX) -c $(COPTS) /Tp EtherStateReceiveWaitBackoff.cc

EtherStateSend.obj: EtherStateSend.cc
	$(CXX) -c $(COPTS) /Tp EtherStateSend.cc

EtherStateWait.obj: EtherStateWait.cc
	$(CXX) -c $(COPTS) /Tp EtherStateWait.cc

EtherStateWaitBackoff.obj: EtherStateWaitBackoff.cc
	$(CXX) -c $(COPTS) /Tp EtherStateWaitBackoff.cc

EtherStateWaitBackoffJam.obj: EtherStateWaitBackoffJam.cc
	$(CXX) -c $(COPTS) /Tp EtherStateWaitBackoffJam.cc

EtherStateWaitJam.obj: EtherStateWaitJam.cc
	$(CXX) -c $(COPTS) /Tp EtherStateWaitJam.cc

MACAddress.obj: MACAddress.cc
	$(CXX) -c $(COPTS) /Tp MACAddress.cc


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	@if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc generateheaders && cd .. || exit /b 1

clean:
	-del *.obj *.idb *.pdb .tstamp 2>NUL
	-del *_n.cc *_n.h *_m.cc *_m.h 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd .. || exit /b 1

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc depend && cd .. || exit /b 1

makefiles:
	opp_nmakemake -f  -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\\inetconfig.vc -n -r -I..\Wireless -I..\..\PHY\Wireless -I.. -I..\.. -I..\..\Util -I..\..\Network\IPv6 -I..\..\World 
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc makefiles && cd .. || exit /b 1

# "re-makemake" is a deprecated, historic name of the above target
re-makemake: makefiles

# DO NOT DELETE THIS LINE -- make depend depends on it.

