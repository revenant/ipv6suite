#
#  Makefile for Ethernet
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\\inetconfig.vc -n -r -I..\..\Base -I..\..\Util -I..\_802 -I..\..\Network\IPv4
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = Ethernet

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../../Base -I../../Util -I../_802 -I../../Network/IPv4

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=../../Base/.tstamp \
            ../../Util/.tstamp \
            ../_802/.tstamp \
            ../../Network/IPv4/.tstamp

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "../../inetconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= EtherCtrl_m.obj EtherFrame_m.obj EtherBus.obj EtherEncap.obj EtherHub.obj EtherLLC.obj EtherMAC.obj MACRelayUnitBase.obj MACRelayUnitNP.obj MACRelayUnitPP.obj utils.obj

# header files generated (from msg files)
GENERATEDHEADERS= EtherCtrl_m.h EtherFrame_m.h

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) Makefile.vc subdirs .tstamp

.tstamp: $(OBJS)
	@echo.>.tstamp

$(OBJS) : $(GENERATEDHEADERS)

# purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

$(EXT_DIR_TSTAMPS):
	@echo Error: $(@:/=\) does not exist.
	@echo This means that at least the above dependency directory has not been built.
	@echo Maybe you need to do a top-level make?
	@echo.
	@exit /b 1

subdirs: $(SUBDIR_TARGETS)

EtherCtrl_m.obj: EtherCtrl_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp EtherCtrl_m.cc

EtherCtrl_m.cc EtherCtrl_m.h: EtherCtrl.msg
	$(MSGC:/=\) -s _m.cc $(INCLUDE_PATH) EtherCtrl.msg

EtherFrame_m.obj: EtherFrame_m.cc
	$(CXX) -c $(NEDCOPTS) /Tp EtherFrame_m.cc

EtherFrame_m.cc EtherFrame_m.h: EtherFrame.msg
	$(MSGC:/=\) -s _m.cc $(INCLUDE_PATH) EtherFrame.msg

EtherBus.obj: EtherBus.cc
	$(CXX) -c $(COPTS) /Tp EtherBus.cc

EtherEncap.obj: EtherEncap.cc
	$(CXX) -c $(COPTS) /Tp EtherEncap.cc

EtherHub.obj: EtherHub.cc
	$(CXX) -c $(COPTS) /Tp EtherHub.cc

EtherLLC.obj: EtherLLC.cc
	$(CXX) -c $(COPTS) /Tp EtherLLC.cc

EtherMAC.obj: EtherMAC.cc
	$(CXX) -c $(COPTS) /Tp EtherMAC.cc

MACRelayUnitBase.obj: MACRelayUnitBase.cc
	$(CXX) -c $(COPTS) /Tp MACRelayUnitBase.cc

MACRelayUnitNP.obj: MACRelayUnitNP.cc
	$(CXX) -c $(COPTS) /Tp MACRelayUnitNP.cc

MACRelayUnitPP.obj: MACRelayUnitPP.cc
	$(CXX) -c $(COPTS) /Tp MACRelayUnitPP.cc

utils.obj: utils.cc
	$(CXX) -c $(COPTS) /Tp utils.cc


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	@if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do @cd %%i && nmake /nologo /f Makefile.vc generateheaders && cd .. || exit /b 1

clean:
	-del *.obj *.idb *.pdb .tstamp 2>NUL
	-del *_n.cc *_n.h *_m.cc *_m.h 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd .. || exit /b 1

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc depend && cd .. || exit /b 1

makefiles:
	opp_nmakemake -f  -N -b D:\home\IPv6SuiteWithINET\ -c D:\home\IPv6SuiteWithINET\\inetconfig.vc -n -r -I..\..\Base -I..\..\Util -I..\_802 -I..\..\Network\IPv4 
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc makefiles && cd .. || exit /b 1

# "re-makemake" is a deprecated, historic name of the above target
re-makemake: makefiles

# DO NOT DELETE THIS LINE -- make depend depends on it.

