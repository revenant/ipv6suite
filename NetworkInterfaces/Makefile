#
#  Makefile for NetworkInterfaces
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -N -b /home/andras/IPv6SuiteWithINET -c /home/andras/IPv6SuiteWithINET/inetconfig -n -r -I../Util
#

# Name of target to be created (-o option)
TARGET = NetworkInterfaces

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with (wildcard needed to prevent "no such file *.o" errors)
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS= ../Util/.tstamp

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../inetconfig
include ../inetconfig

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS=  _802 ARP Ethernet Ethernet6 PPP PPP6 Wireless

# object files in this directory
OBJS= LL6ControlInfo_m.o LinkLayerModule.o

# header files generated (from msg files)
GENERATEDHEADERS= LL6ControlInfo_m.h

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) subdirs Makefile .tstamp
	@# do nothing

.tstamp: $(OBJS)
	echo>.tstamp

$(OBJS) : $(GENERATEDHEADERS)


purify: $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_TSTAMPS) subdirs Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

$(EXT_DIR_TSTAMPS):
	@echo
	@echo Error: $@ does not exist.
	@echo This means that at least the above dependency directory has not been built.
	@echo Maybe you need to do a top-level make?
	@echo
	@exit 1

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

_802:
	cd _802 && $(MAKE)

ARP:
	cd ARP && $(MAKE)

Ethernet:
	cd Ethernet && $(MAKE)

Ethernet6:
	cd Ethernet6 && $(MAKE)

PPP:
	cd PPP && $(MAKE)

PPP6:
	cd PPP6 && $(MAKE)

Wireless:
	cd Wireless && $(MAKE)

LL6ControlInfo_m.o: LL6ControlInfo_m.cc
	$(CXX) -c $(NEDCOPTS) LL6ControlInfo_m.cc

LL6ControlInfo_m.cc LL6ControlInfo_m.h: LL6ControlInfo.msg
	$(MSGC) $(INCLUDE_PATH) LL6ControlInfo.msg

LinkLayerModule.o: LinkLayerModule.cc
	$(CXX) -c $(COPTS) LinkLayerModule.cc


#doc: neddoc doxy

#neddoc:
#	opp_neddoc -a

#doxy: doxy.cfg
#	doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) generateheaders) || exit 1; done

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h .tstamp
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) depend) || exit 1; done

makefiles:
	# recreate Makefile
	opp_makemake -f  -N -b /home/andras/IPv6SuiteWithINET -c /home/andras/IPv6SuiteWithINET/inetconfig -n -r -I../Util 
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) makefiles) || exit 1; done

makefile-ins:
	# recreate Makefile.in
	opp_makemake -f -m  -N -b /home/andras/IPv6SuiteWithINET -c /home/andras/IPv6SuiteWithINET/inetconfig -n -r -I../Util 
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) makefile-ins) || exit 1; done

# "re-makemake" and "re-makemake-m" are deprecated, historic names of the above two targets
re-makemake: makefiles
re-makemake-m: makefile-ins


# DO NOT DELETE THIS LINE -- make depend depends on it.
LinkLayerModule.o: LinkLayerModule.cc \
  LinkLayerModule.h \
  ../Util/opp_utils.h \
  ../Util/boost/weak_ptr.hpp \
  ../Util/boost/cast.hpp \
  ../Util/boost/shared_ptr.hpp \
  ../Util/boost/config.hpp \
  ../Util/boost/assert.hpp \
  ../Util/boost/checked_delete.hpp \
  ../Util/boost/throw_exception.hpp \
  ../Util/boost/detail/shared_count.hpp \
  ../Util/boost/detail/workaround.hpp \
  ../Util/boost/config/select_compiler_config.hpp \
  ../Util/boost/config/select_stdlib_config.hpp \
  ../Util/boost/config/select_platform_config.hpp \
  ../Util/boost/config/suffix.hpp \
  ../Util/boost/config/posix_features.hpp \
  ../Util/boost/type.hpp \
  ../Util/boost/non_type.hpp \
  ../Util/boost/detail/lightweight_mutex.hpp \
  ../Util/boost/detail/lwm_win32_nt.hpp \
  ../Util/boost/detail/lwm_nop.hpp \
  ../Util/boost/limits.hpp \
  ../Util/boost/detail/select_type.hpp
